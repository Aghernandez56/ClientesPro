@model IEnumerable<ClientesPro.ViewModels.ProductoVM>

<div class="container mt-4">
    <h2 class="text-center text-primary mb-4">
        <i class="bi bi-box-seam me-2"></i>Listado de Productos
    </h2>

    <!-- Botón de regreso -->
    <div class="text-center mt-4">
        <a asp-controller="Home" asp-action="Index" class="btn btn-outline-primary px-4 shadow-sm">
            <i class="bi bi-arrow-left-circle"></i> Regresar al Inicio
        </a>
    </div>

    <!-- Formulario rápido para crear producto -->
    <div class="row g-2 align-items-end">
        <div class="col-sm-4">
            <label class="form-label small" for="f_nombre">Nombre</label>
            <input id="f_nombre" name="Nombre" type="text" class="form-control" />
            <div id="err_nombre" class="form-text text-danger small"></div>
        </div>

        <div class="col-sm-5">
            <label class="form-label small" for="f_descripcion">Descripción</label>
            <input id="f_descripcion" name="Descripcion" type="text" class="form-control" />
            <div id="err_descripcion" class="form-text text-danger small"></div>
        </div>

        <div class="col-sm-2">
            <label class="form-label small" for="f_precio">Precio</label>
            <input id="f_precio" name="Precio" type="number" step="0.01" class="form-control" />
            <div id="err_precio" class="form-text text-danger small"></div>
        </div>

        <div class="col-sm-1">
            <button id="btnCrearProducto" type="button" class="btn btn-primary w-100" onclick="crearProductoAjax()">Crear</button>
        </div>
    </div>
    <div id="msgCrearProducto" class="mt-2"></div>



    <!-- Tabla de productos -->
    <div class="table-responsive shadow-sm">
        <table id="tablaProductos" class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Id</th>
                    <th>Nombre</th>
                    <th>Descripción</th>
                    <th>Precio</th>
                    <th class="text-center">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr data-id="@item.Id">
                        <td class="align-middle">@item.Id</td>
                        <td class="align-middle">@item.Nombre</td>
                        <td class="align-middle">@item.Descripcion</td>
                        <td class="align-middle">@item.Precio.ToString("C")</td>
                        <td class="align-middle text-center">
                            <button class="btn btn-sm btn-outline-secondary me-1">
                                <i class="bi bi-pencil"></i> Editar
                            </button>
                            <button class="btn btn-sm btn-outline-danger">
                                <i class="bi bi-trash"></i> Eliminar
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    // Limpia mensajes y estilos de validación
    function clearErrors(prefix = '') {
        // limpiar spans de error que usan convención: err_<campoLower>
        $('[id^="err_"]').html('');
        // remover clases invalidas
        $('.is-invalid').removeClass('is-invalid');
    }

    // Pinta errores por campo. 
    function paintFieldErrors(errors) {
        if (!errors) return;

        var fieldMap = {
            'Nombre': 'nombre',
            'Descripcion': 'descripcion',
            'Precio': 'precio'
        };

        Object.keys(errors).forEach(function (key) {
            // tomar la parte final de la clave si viene con prefijo (ej: "vm.Nombre")
            var shortKey = key.split('.').pop();
            var mapped = fieldMap[shortKey] || shortKey.toLowerCase();

            var spanId = '#err_' + mapped;
            var inputId = '#f_' + mapped;

            var mensajes = errors[key];
            var html = mensajes.map(function (m) { return '<div>' + m + '</div>'; }).join('');
            if ($(spanId).length) {
                $(spanId).html(html);
            } else {
                // fallback: mostrar en msgCrearProducto
                $('#msgCrearProducto').append('<div class="text-danger">' + mensajes.join(', ') + '</div>');
            }

            if ($(inputId).length) {
                $(inputId).addClass('is-invalid');
            }
        });
    }

    // Validación  mínima antes de enviar
    function validateProductoClient() {
        clearErrors();
        var nombre = $('#f_nombre').val() || '';
        var descripcion = $('#f_descripcion').val() || '';
        var precioVal = $('#f_precio').val();
        var precio = precioVal === '' ? null : parseFloat(precioVal);

        var errors = {};

        if (!nombre.trim()) errors['Nombre'] = ['El nombre es obligatorio.'];
        if (!descripcion.trim()) errors['Descripcion'] = ['La descripción es obligatoria.'];
        if (precio === null || isNaN(precio)) errors['Precio'] = ['El precio es obligatorio y debe ser numérico.'];
        else if (precio <= 0) errors['Precio'] = ['El precio debe ser mayor a 0.'];

        return errors;
    }

    // AJAX: crear producto
    function crearProductoAjax() {
        $('#msgCrearProducto').html('');
        clearErrors();

        // validación client-side rápida
        var clientErr = validateProductoClient();
        if (Object.keys(clientErr).length) {
            paintFieldErrors(clientErr);
            return;
        }

        var nombre = $('#f_nombre').val() || '';
        var descripcion = $('#f_descripcion').val() || '';
        var precio = parseFloat($('#f_precio').val()) || 0;

        var vm = {
            Nombre: nombre,
            Descripcion: descripcion,
            Precio: precio
        };

        $('#btnCrearProducto').prop('disabled', true);

        $.ajax({
            method: 'POST',
            url: '@Url.Action("CrearAjax", "Productos")',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(vm),
            success: function (respuesta) {
                $('#btnCrearProducto').prop('disabled', false);

                if (respuesta && respuesta.exito) {
                    var item = respuesta.datos;

                    var fila = '<tr data-id="' + (item.id ?? '') + '">' +
                        '<td class="align-middle">' + (item.id ?? '') + '</td>' +
                        '<td class="align-middle"><strong>' + (item.nombre || '') + '</strong></td>' +
                        '<td class="align-middle">' + (item.descripcion || '') + '</td>' +
                        '<td class="align-middle fw-bold">' + new Intl.NumberFormat('es-MX', { style: 'currency', currency: 'MXN' }).format(item.precio || 0) + '</td>' +
                        '<td class="align-middle text-center">' +
                        '<button class="btn btn-sm btn-outline-secondary me-1"><i class="bi bi-pencil"></i> Editar</button>' +
                        '<button class="btn btn-sm btn-outline-danger"><i class="bi bi-trash"></i> Eliminar</button>' +
                        '</td>' +
                        '</tr>';

                    $('#tablaProductos tbody').prepend(fila);
                    $('#msgCrearProducto').html('<div class="text-success">Producto creado correctamente (ID: ' + (item.id ?? '') + ')</div>');

                    // limpiar
                    $('#f_nombre').val('');
                    $('#f_descripcion').val('');
                    $('#f_precio').val('');
                    clearErrors();
                } else {
                    
                    if (respuesta && respuesta.errores && typeof respuesta.errores === 'object') {
                        paintFieldErrors(respuesta.errores);
                        if (respuesta.mensaje) $('#msgCrearProducto').prepend('<div class="text-danger">' + respuesta.mensaje + '</div>');
                    } else {
                        var mensaje = respuesta && (respuesta.mensaje || JSON.stringify(respuesta.errores)) || 'Error al crear producto';
                        $('#msgCrearProducto').html('<div class="text-danger">' + mensaje + '</div>');
                    }
                }
            },
            error: function (xhr, status, error) {
                $('#btnCrearProducto').prop('disabled', false);
                console.error(error);
                $('#msgCrearProducto').html('<div class="text-danger">Error al crear producto.</div>');
            }
        });
    }
</script>
